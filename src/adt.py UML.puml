@startuml
'https://plantuml.com/sequence-diagram



abstract MultiSet {
+add(Any): bool
+remove(Any): None
+contains(Any): bool
+is_empty(): bool
+count(Any): int
+size(): int

}

class Tree {
    -_root: Any
    -_subtree: list[Tree]

    +is_empty(): bool
    +__len__(): int
    +count(Any): int
    +__contains__(Any): bool
    +delete_item(Any): bool
    -_delete_root(): None
    +insert(Any): None

}

MultiSet <|-- TreeMultiSet
TreeMultiSet *-- Tree
class TreeMultiSet {
-_tree: Tree
+add(Any): bool
+remove(Any): None
+contains(Any): bool
+is_empty(): bool
+count(Any): int
+size(): int
}

MultiSet <|-- ArrayListMultiSet
class ArrayListMultiSet {
-_list: list
+add(Any): bool
+remove(Any): None
+contains(Any): bool
+is_empty(): bool
+count(Any): int
+size(): int
}

MultiSet <|-- LinkedListMultiSet
LinkedListMultiSet *-- _Node
class LinkedListMultiSet {
-_front: _Node | None
-_size: int

+add(Any): bool
+remove(Any): None
+contains(Any): bool
+is_empty(): bool
+count(Any): int
+size(): int
}


class _Node <<private>>{
+item: Any
+next: _Node | None
}

@enduml